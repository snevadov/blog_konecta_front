[{"C:\\xampp\\htdocs\\frontends\\blogs\\src\\index.js":"1","C:\\xampp\\htdocs\\frontends\\blogs\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\frontends\\blogs\\src\\App.js":"3","C:\\xampp\\htdocs\\frontends\\blogs\\src\\components\\ListaUsuarios.js":"4","C:\\xampp\\htdocs\\frontends\\blogs\\src\\components\\Home.js":"5","C:\\xampp\\htdocs\\frontends\\blogs\\src\\components\\ListaBlogs.js":"6","C:\\xampp\\htdocs\\frontends\\blogs\\src\\components\\ListaCategorias.js":"7","C:\\xampp\\htdocs\\frontends\\blogs\\src\\components\\Blog.js":"8"},{"size":220,"mtime":1611708920009,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1701,"mtime":1611743850897,"results":"12","hashOfConfig":"10"},{"size":11437,"mtime":1611735630572,"results":"13","hashOfConfig":"10"},{"size":204,"mtime":1611737249608,"results":"14","hashOfConfig":"10"},{"size":11982,"mtime":1611739986374,"results":"15","hashOfConfig":"10"},{"size":7597,"mtime":1611737075059,"results":"16","hashOfConfig":"10"},{"size":3089,"mtime":1611760288577,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"10ztx8x",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\frontends\\blogs\\src\\index.js",[],["40","41"],"C:\\xampp\\htdocs\\frontends\\blogs\\src\\reportWebVitals.js",[],["42","43"],"C:\\xampp\\htdocs\\frontends\\blogs\\src\\App.js",["44","45","46","47","48","49","50","51","52","53","54"],"import React, {useState, useEffect} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\nimport axios from 'axios';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink\n} from \"react-router-dom\";\nimport ListaUsuarios from './components/ListaUsuarios';\nimport ListaBlogs from './components/ListaBlogs';\nimport Home from './components/Home';\nimport ListaCategorias from './components/ListaCategorias';\nimport Blog from './components/Blog';\n\nfunction App() {\n  const baseUrl=\"http://localhost/blog_konecta/\";\n  const [data, setData]=useState([]);\n\n  return (\n    <Router>\n      <div className=\"container mt-5\">\n        <h1>Blogs Konecta</h1>\n        <div className=\"btn-group\">\n          <NavLink to=\"/\" className=\"btn btn-dark\">\n            Inicio\n          </NavLink>\n          <NavLink to=\"/usuarios\" className=\"btn btn-dark\">\n            Usuarios\n          </NavLink>\n          <NavLink to=\"/blogs\" className=\"btn btn-dark\">\n            Blogs\n          </NavLink>\n          <NavLink to=\"/categorias\" className=\"btn btn-dark\">\n            Categorias\n          </NavLink>\n\n        </div>\n        <hr />\n        <Switch>\n          <Route path=\"/blogs/:id/:slug\">\n            <Blog />\n          </Route>\n          <Route path=\"/usuarios\">\n            <ListaUsuarios />\n          </Route>\n          <Route path=\"/blogs\">\n            <ListaBlogs />\n          </Route>\n          <Route path=\"/categorias\">\n            <ListaCategorias />\n          </Route>\n          <Route path=\"/\">\n            <ListaBlogs />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;","C:\\xampp\\htdocs\\frontends\\blogs\\src\\components\\ListaUsuarios.js",["55","56","57","58","59","60"],"import React, {useState, useEffect} from 'react'\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nconst ListaUsuarios = () => {\r\n\r\n    const [data, setData] = React.useState([]);\r\n    const baseUrl=\"http://localhost/blog_konecta/\";\r\n    const [modalInsertar, setModalInsertar]= useState(false);\r\n    const [modalEditar, setModalEditar]= useState(false);\r\n    const [modalEliminar, setModalEliminar]= useState(false);\r\n    const [usuarioSeleccionado, setusuarioSeleccionado]=useState({\r\n        id: '',\r\n        identificacion:'',\r\n        nombre: '',\r\n        correo: '',\r\n        contrasena: '',\r\n        numeromovil:'',\r\n        idtipousuario: 2,\r\n        tipousuario:'Usuario'\r\n    });\r\n    \r\n    const handleChange=e=>{\r\n        const {name, value}=e.target;\r\n        setusuarioSeleccionado((prevState)=>({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n        if(name == 'idtipousuario'){\r\n            if (value == 1){\r\n                setusuarioSeleccionado((prevState)=>({\r\n                    ...prevState,\r\n                    ['tipousuario']: 'Administrador'\r\n                }))\r\n            }\r\n            if (value == 2){\r\n                setusuarioSeleccionado((prevState)=>({\r\n                    ...prevState,\r\n                    ['tipousuario']: 'Usuario'\r\n                }))\r\n            }\r\n        }\r\n        console.log(usuarioSeleccionado);\r\n    }\r\n    \r\n    const abrirCerrarModalInsertar=()=>{\r\n        setModalInsertar(!modalInsertar);\r\n    }\r\n    \r\n    const abrirCerrarModalEditar=()=>{\r\n        setModalEditar(!modalEditar);\r\n    }\r\n    \r\n    const abrirCerrarModalEliminar=()=>{\r\n        setModalEliminar(!modalEliminar);\r\n    }\r\n\r\n    const seleccionarUsuario=(usuario, caso)=>{\r\n        setusuarioSeleccionado(usuario);\r\n    \r\n        (caso===\"Editar\")?\r\n        abrirCerrarModalEditar():\r\n        abrirCerrarModalEliminar()\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('UseEffect')\r\n        listarUsuarios()\r\n    }, [])\r\n\r\n    //Listado de usuarios via API\r\n    const listarUsuarios=async()=>{\r\n        var f = new FormData();\r\n        f.append(\"action\", \"listarUsuarios\");\r\n        await axios.post(baseUrl, f)\r\n        .then(response=>{\r\n          setData(response.data.usuarios);\r\n        }).catch(error=>{\r\n          console.log(error);\r\n        })\r\n    }\r\n\r\n    //Crear\r\n    const crearUsuario=async()=>{\r\n        var f = new FormData();\r\n        f.append(\"identificacion\", usuarioSeleccionado.identificacion);\r\n        f.append(\"nombre\", usuarioSeleccionado.nombre);\r\n        f.append(\"correo\", usuarioSeleccionado.correo);\r\n        f.append(\"contrasena\", usuarioSeleccionado.contrasena);\r\n        f.append(\"numeromovil\", usuarioSeleccionado.numeromovil);\r\n        f.append(\"idtipousuario\", usuarioSeleccionado.idtipousuario);\r\n        f.append(\"tipousuario\", usuarioSeleccionado.tipousuario);\r\n        f.append(\"action\", \"crearUsuario\");\r\n        await axios.post(baseUrl, f)\r\n        .then(response=>{\r\n            console.log(response.data);\r\n            setData(response.data.usuarios);\r\n            abrirCerrarModalInsertar();\r\n        }).catch(error=>{\r\n            console.log(error);\r\n        })\r\n      }\r\n      \r\n      //Editar\r\n      const editarUsuario=async()=>{\r\n        var f = new FormData();\r\n        f.append(\"id\", usuarioSeleccionado.id);\r\n        f.append(\"identificacion\", usuarioSeleccionado.identificacion);\r\n        f.append(\"nombre\", usuarioSeleccionado.nombre);\r\n        f.append(\"correo\", usuarioSeleccionado.correo);\r\n        f.append(\"contrasena\", usuarioSeleccionado.contrasena);\r\n        f.append(\"numeromovil\", usuarioSeleccionado.numeromovil);\r\n        f.append(\"idtipousuario\", usuarioSeleccionado.idtipousuario);\r\n        f.append(\"tipousuario\", usuarioSeleccionado.tipousuario);\r\n        f.append(\"action\", \"editarUsuario\");\r\n        await axios.post(baseUrl, f)\r\n        .then(response=>{\r\n          var dataNueva= response.data.usuarios;\r\n          dataNueva.map(usuario=>{\r\n            if(usuario.id===usuarioSeleccionado.id){\r\n              usuario.nombre=usuarioSeleccionado.nombre;\r\n              usuario.identificacion=usuarioSeleccionado.identificacion;\r\n              usuario.correo=usuarioSeleccionado.correo;\r\n              usuario.numeromovil=usuarioSeleccionado.numeromovil;\r\n              usuario.idtipousuario=usuarioSeleccionado.idtipousuario;\r\n              usuario.tipousuario=usuarioSeleccionado.tipousuario;\r\n            }\r\n          });\r\n          setData(dataNueva);\r\n          abrirCerrarModalEditar();\r\n        }).catch(error=>{\r\n          console.log(error);\r\n        })\r\n      }\r\n      \r\n      //Eliminar\r\n      const eliminarUsuario=async()=>{\r\n        var f = new FormData();\r\n        f.append(\"id\", usuarioSeleccionado.id);\r\n        f.append(\"action\", \"eliminarUsuario\");\r\n        await axios.post(baseUrl, f, {params: {id: usuarioSeleccionado.id}})\r\n        .then(response=>{\r\n          setData(response.data.usuarios.filter(usuario=>usuario.id!==usuarioSeleccionado.id));\r\n          abrirCerrarModalEliminar();\r\n        }).catch(error=>{\r\n          console.log(error);\r\n        })\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Listado de usuarios</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">Identificacion</th>\r\n                    <th scope=\"col\">Nombre</th>\r\n                    <th scope=\"col\">Correo</th>\r\n                    <th scope=\"col\">Tipo Usuario</th>\r\n                    <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map(usuario=>(\r\n                        <tr key={usuario.id}>\r\n                            <td>{usuario.identificacion}</td>\r\n                            <td>{usuario.nombre}</td>\r\n                            <td>{usuario.correo}</td>\r\n                            <td>{usuario.tipousuario}</td>\r\n                            <td>\r\n                                <button className=\"btn btn-primary\" onClick={()=>seleccionarUsuario(usuario, \"Editar\")}>Editar</button> {\"  \"}\r\n                                <button className=\"btn btn-danger\" onClick={()=>seleccionarUsuario(usuario, \"Eliminar\")}>Eliminar</button>\r\n                            </td>\r\n                        </tr>    \r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <button className=\"btn btn-success\" onClick={()=>abrirCerrarModalInsertar()}>Insertar</button>\r\n\r\n            <Modal isOpen={modalInsertar}>\r\n            <ModalHeader>Insertar Usuario</ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"form-group\">\r\n                <label>Identificación: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"identificacion\" onChange={handleChange}/>\r\n                <br />\r\n                <label>Nombre: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"nombre\" onChange={handleChange}/>\r\n                <br />\r\n                <label>Correo: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"correo\" onChange={handleChange}/>\r\n                <br />\r\n                <label>Contraseña: </label>\r\n                <br />\r\n                <input type=\"password\" className=\"form-control\" name=\"contrasena\" onChange={handleChange}/>\r\n                <br />\r\n                <label>Número Móvil: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"numeromovil\" onChange={handleChange}/>\r\n                <br />\r\n                <label>Tipo usuario: </label>\r\n                <br />\r\n                <select className=\"form-select\" aria-label=\"Default select example\" name=\"idtipousuario\" onChange={handleChange}>\r\n                    <option value=\"1\">Administrador</option>\r\n                    <option value=\"2\" selected>Usuario</option>\r\n                </select>\r\n                <br />\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <button className=\"btn btn-primary\" onClick={()=>crearUsuario()}>Insertar</button>{\"   \"}\r\n                <button className=\"btn btn-danger\" onClick={()=>abrirCerrarModalInsertar()}>Cancelar</button>\r\n            </ModalFooter>\r\n            </Modal>\r\n\r\n\r\n            \r\n            <Modal isOpen={modalEditar}>\r\n            <ModalHeader>Editar Usuario</ModalHeader>\r\n            <ModalBody>\r\n            <div className=\"form-group\">\r\n                <label>Identificación: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"identificacion\" onChange={handleChange} value={usuarioSeleccionado && usuarioSeleccionado.identificacion}/>\r\n                <br />\r\n                <label>Nombre: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"nombre\" onChange={handleChange} value={usuarioSeleccionado && usuarioSeleccionado.nombre}/>\r\n                <br />\r\n                <label>Correo: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"correo\" onChange={handleChange} value={usuarioSeleccionado && usuarioSeleccionado.correo}/>\r\n                <br />\r\n                <label>Contraseña: </label>\r\n                <br />\r\n                <input type=\"password\" className=\"form-control\" name=\"contrasena\" onChange={handleChange} value={usuarioSeleccionado && usuarioSeleccionado.contrasena}/>\r\n                <br />\r\n                <label>Número Móvil: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"numeromovil\" onChange={handleChange} value={usuarioSeleccionado && usuarioSeleccionado.numeromovil}/>\r\n                <br />\r\n                <label>Tipo usuario: </label>\r\n                <br />\r\n                <select className=\"form-select\" aria-label=\"Default select example\" name=\"idtipousuario\" onChange={handleChange} value={usuarioSeleccionado && usuarioSeleccionado.idtipousuario}>\r\n                    <option value=\"1\">Administrador</option>\r\n                    <option value=\"2\">Usuario</option>\r\n                </select>\r\n                <br />\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <button className=\"btn btn-primary\" onClick={()=>editarUsuario()}>Editar</button>{\"   \"}\r\n                <button className=\"btn btn-danger\" onClick={()=>abrirCerrarModalEditar()}>Cancelar</button>\r\n            </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalEliminar}>\r\n                <ModalBody>\r\n                ¿Estás seguro que deseas eliminar el usuario {usuarioSeleccionado && usuarioSeleccionado.nombre}?\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                <button className=\"btn btn-danger\" onClick={()=>eliminarUsuario()}>\r\n                    Sí\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={()=>abrirCerrarModalEliminar()}\r\n                >\r\n                    No\r\n                </button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ListaUsuarios","C:\\xampp\\htdocs\\frontends\\blogs\\src\\components\\Home.js",[],"C:\\xampp\\htdocs\\frontends\\blogs\\src\\components\\ListaBlogs.js",["61","62","63","64"],"import React, {useState, useEffect} from 'react'\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ListaBlogs = () => {\r\n\r\n    const [data, setData] = React.useState([]);\r\n    const [categorias, setCategorias] = React.useState([]);\r\n    const baseUrl=\"http://localhost/blog_konecta/\";\r\n    const [modalInsertar, setModalInsertar]= useState(false);\r\n    const [modalEditar, setModalEditar]= useState(false);\r\n    const [modalEliminar, setModalEliminar]= useState(false);\r\n    const [blogSeleccionado, setblogSeleccionado]=useState({\r\n        id: '',\r\n        titulo:'',\r\n        slug: '',\r\n        textocorto: '',\r\n        textolargo: '',\r\n        rutaimagen:'',\r\n        idcategorias: [],\r\n        categorias:''\r\n    });\r\n    \r\n    const handleChange=e=>{\r\n        const {name, value}=e.target;\r\n        var nombre = '';\r\n        categorias.forEach(element => {\r\n            if(element.id==value){\r\n                nombre = element.nombre;\r\n            }\r\n        });\r\n\r\n        if(name == 'idcategorias'){\r\n            setblogSeleccionado((prevState)=>({\r\n                ...prevState,\r\n                [name]: value,\r\n                ['categorias']: nombre\r\n            }))\r\n        } else {\r\n            setblogSeleccionado((prevState)=>({\r\n                ...prevState,\r\n                [name]: value\r\n            }))\r\n        }\r\n        console.log(blogSeleccionado);\r\n    }\r\n    \r\n    const abrirCerrarModalInsertar=()=>{\r\n        setModalInsertar(!modalInsertar);\r\n    }\r\n    \r\n    const abrirCerrarModalEditar=()=>{\r\n        setModalEditar(!modalEditar);\r\n    }\r\n    \r\n    const abrirCerrarModalEliminar=()=>{\r\n        setModalEliminar(!modalEliminar);\r\n    }\r\n\r\n    const seleccionarBlog=(blog, caso)=>{\r\n        setblogSeleccionado(blog);\r\n        console.log(blog);\r\n    \r\n        (caso===\"Editar\")?\r\n        abrirCerrarModalEditar():\r\n        abrirCerrarModalEliminar()\r\n    }\r\n\r\n    useEffect(() => {\r\n        listarBlogs();\r\n        listarCategorias();\r\n    }, [])\r\n\r\n    //Listado de blogs via API\r\n    const listarBlogs=async()=>{\r\n        var f = new FormData();\r\n        f.append(\"action\", \"listarBlogs\");\r\n        await axios.post(baseUrl, f)\r\n        .then(response=>{\r\n          setData(response.data.blogs);\r\n        }).catch(error=>{\r\n          console.log(error);\r\n        })\r\n    }\r\n\r\n    //Listado de categorías via API\r\n    const listarCategorias=async()=>{\r\n        var f = new FormData();\r\n        f.append(\"action\", \"listarCategorias\");\r\n        await axios.post(baseUrl, f)\r\n        .then(response=>{\r\n          setCategorias(response.data.categorias);\r\n        }).catch(error=>{\r\n          console.log(error);\r\n        })\r\n    }\r\n\r\n    //Crear\r\n    const crearBlog=async()=>{\r\n        var f = new FormData();\r\n        f.append(\"titulo\", blogSeleccionado.titulo);\r\n        f.append(\"slug\", blogSeleccionado.slug);\r\n        f.append(\"textocorto\", blogSeleccionado.textocorto);\r\n        f.append(\"textolargo\", blogSeleccionado.textolargo);\r\n        f.append(\"rutaimagen\", blogSeleccionado.rutaimagen);\r\n        f.append(\"idcategorias\", blogSeleccionado.idcategorias);\r\n        f.append(\"categorias\", blogSeleccionado.categorias);\r\n        f.append(\"action\", \"crearBlog\");\r\n        await axios.post(baseUrl, f)\r\n        .then(response=>{\r\n            console.log(response.data);\r\n            setData(response.data.blogs);\r\n            abrirCerrarModalInsertar();\r\n        }).catch(error=>{\r\n            console.log(error);\r\n        })\r\n      }\r\n      \r\n      //Editar\r\n      const editarBlog=async()=>{\r\n        var f = new FormData();\r\n        f.append(\"id\", blogSeleccionado.id);\r\n        f.append(\"titulo\", blogSeleccionado.titulo);\r\n        f.append(\"slug\", blogSeleccionado.slug);\r\n        f.append(\"textocorto\", blogSeleccionado.textocorto);\r\n        f.append(\"textolargo\", blogSeleccionado.textolargo);\r\n        f.append(\"rutaimagen\", blogSeleccionado.rutaimagen);\r\n        f.append(\"idcategorias\", blogSeleccionado.idcategorias);\r\n        f.append(\"categorias\", blogSeleccionado.categorias);\r\n        f.append(\"action\", \"editarBlog\");\r\n\r\n        await axios.post(baseUrl, f)\r\n        .then(response=>{\r\n          var dataNueva= response.data.blogs;\r\n          dataNueva.map(blog=>{\r\n            if(blog.id===blogSeleccionado.id){\r\n              blog.titulo=blogSeleccionado.titulo;\r\n              blog.slug=blogSeleccionado.slug;\r\n              blog.textocorto=blogSeleccionado.textocorto;\r\n              blog.textolargo=blogSeleccionado.textolargo;\r\n              blog.rutaimagen=blogSeleccionado.rutaimagen;\r\n              blog.categorias=blogSeleccionado.categorias;\r\n            }\r\n          });\r\n          setData(dataNueva);\r\n          abrirCerrarModalEditar();\r\n        }).catch(error=>{\r\n          console.log(error);\r\n        })\r\n      }\r\n      \r\n      //Eliminar\r\n      const eliminarBlog=async()=>{\r\n        var f = new FormData();\r\n        f.append(\"id\", blogSeleccionado.id);\r\n        f.append(\"action\", \"eliminarBlog\");\r\n        await axios.post(baseUrl, f, {params: {id: blogSeleccionado.id}})\r\n        .then(response=>{\r\n          setData(response.data.blogs.filter(blog=>blog.id!==blogSeleccionado.id));\r\n          abrirCerrarModalEliminar();\r\n        }).catch(error=>{\r\n          console.log(error);\r\n        })\r\n      }\r\n\r\n    return (\r\n        <div className=\"Container\">\r\n            <h2>Listado de Blogs</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">Título</th>\r\n                    <th scope=\"col\">Texto Corto</th>\r\n                    <th scope=\"col\">Categorias</th>\r\n                    <th scope=\"col\">Link</th>\r\n                    <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map(blog=>(\r\n                        <tr key={blog.id}>\r\n                            <td>{blog.titulo}</td>\r\n                            <td>{blog.textocorto}</td>\r\n                            <td>{blog.categorias}</td>\r\n                            <td>\r\n                                <Link to={`/blogs/${blog.id}/${blog.slug}`}>\r\n                                    {blog.slug}\r\n                                </Link>\r\n                            </td>\r\n                            <td>\r\n                                <button className=\"btn btn-primary\" onClick={()=>seleccionarBlog(blog, \"Editar\")}>Editar</button> {\"  \"}\r\n                                <button className=\"btn btn-danger\" onClick={()=>seleccionarBlog(blog, \"Eliminar\")}>Eliminar</button>\r\n                            </td>\r\n                        </tr>    \r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <button className=\"btn btn-success\" onClick={()=>abrirCerrarModalInsertar()}>Insertar</button>\r\n\r\n            <Modal isOpen={modalInsertar}>\r\n            <ModalHeader>Insertar Blog</ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"form-group\">\r\n                <label>Título: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"titulo\" onChange={handleChange}/>\r\n                <br />\r\n                <label>Texto corto: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"textocorto\" onChange={handleChange}/>\r\n                <br />\r\n                <label>Texto largo: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"textolargo\" rows=\"3\" onChange={handleChange}/>\r\n                <br />\r\n                <label>URL: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"slug\" onChange={handleChange}/>\r\n                <br />\r\n                <label>Ruta Imagen: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"rutaimagen\" onChange={handleChange}/>\r\n                <br />\r\n                <label>Categorías: </label>\r\n                <br />\r\n                <select className=\"form-select\" aria-label=\"Default select example\" name=\"idcategorias\" onChange={handleChange}>\r\n                    <option> Seleccione una opción</option>\r\n                    {categorias.map(categoria=>(\r\n                            <option key={categoria.id} id={categoria.id} value={categoria.id}>{categoria.nombre}</option>\r\n                        ))}\r\n                </select>\r\n                <br />\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <button className=\"btn btn-primary\" onClick={()=>crearBlog()}>Insertar</button>{\"   \"}\r\n                <button className=\"btn btn-danger\" onClick={()=>abrirCerrarModalInsertar()}>Cancelar</button>\r\n            </ModalFooter>\r\n            </Modal>\r\n\r\n\r\n            \r\n            <Modal isOpen={modalEditar}>\r\n            <ModalHeader>Editar Blog</ModalHeader>\r\n            <ModalBody>\r\n            <div className=\"form-group\">\r\n                <label>Título: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"titulo\" onChange={handleChange} value={blogSeleccionado && blogSeleccionado.titulo}/>\r\n                <br />\r\n                <label>Texto corto: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"textocorto\" onChange={handleChange} value={blogSeleccionado && blogSeleccionado.textocorto}/>\r\n                <br />\r\n                <label>Texto largo: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"textolargo\" rows=\"3\" onChange={handleChange} value={blogSeleccionado && blogSeleccionado.textolargo}/>\r\n                <br />\r\n                <label>URL: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"slug\" onChange={handleChange} value={blogSeleccionado && blogSeleccionado.slug}/>\r\n                <br />\r\n                <label>Ruta Imagen: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"rutaimagen\" onChange={handleChange} value={blogSeleccionado && blogSeleccionado.rutaimagen}/>\r\n                <br />\r\n                <label>Categorías: </label>\r\n                <br />\r\n                <select className=\"form-select\" aria-label=\"Default select example\" name=\"idcategorias\" onChange={handleChange} value={blogSeleccionado && blogSeleccionado.idcategorias}>\r\n                    <option> Seleccione una opción</option>\r\n                    {categorias.map(categoria=>(\r\n                            <option key={categoria.id} id={categoria.id} value={categoria.id}>{categoria.nombre}</option>\r\n                        ))}\r\n                </select>\r\n                <br />\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <button className=\"btn btn-primary\" onClick={()=>editarBlog()}>Editar</button>{\"   \"}\r\n                <button className=\"btn btn-danger\" onClick={()=>abrirCerrarModalEditar()}>Cancelar</button>\r\n            </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalEliminar}>\r\n                <ModalBody>\r\n                ¿Estás seguro que deseas eliminar el blog {blogSeleccionado && blogSeleccionado.titulo}?\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                <button className=\"btn btn-danger\" onClick={()=>eliminarBlog()}>\r\n                    Sí\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={()=>abrirCerrarModalEliminar()}\r\n                >\r\n                    No\r\n                </button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ListaBlogs","C:\\xampp\\htdocs\\frontends\\blogs\\src\\components\\ListaCategorias.js",["65"],"import React, {useState, useEffect} from 'react'\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nconst ListaCategorias = () => {\r\n\r\n    const [data, setData] = React.useState([]);\r\n    const baseUrl=\"http://localhost/blog_konecta/\";\r\n    const [modalInsertar, setModalInsertar]= useState(false);\r\n    const [modalEditar, setModalEditar]= useState(false);\r\n    const [modalEliminar, setModalEliminar]= useState(false);\r\n    const [categoriaSeleccionada, setcategoriaSeleccionada]=useState({\r\n        id: '',\r\n        nombre:'',\r\n        descripcion: ''\r\n    });\r\n    \r\n    const handleChange=e=>{\r\n        const {name, value}=e.target;\r\n        setcategoriaSeleccionada((prevState)=>({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n        console.log(categoriaSeleccionada);\r\n    }\r\n    \r\n    const abrirCerrarModalInsertar=()=>{\r\n        setModalInsertar(!modalInsertar);\r\n    }\r\n    \r\n    const abrirCerrarModalEditar=()=>{\r\n        setModalEditar(!modalEditar);\r\n    }\r\n    \r\n    const abrirCerrarModalEliminar=()=>{\r\n        setModalEliminar(!modalEliminar);\r\n    }\r\n\r\n    const seleccionarCategoria=(categoria, caso)=>{\r\n        setcategoriaSeleccionada(categoria);\r\n    \r\n        (caso===\"Editar\")?\r\n        abrirCerrarModalEditar():\r\n        abrirCerrarModalEliminar()\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('UseEffect')\r\n        listarCategorias()\r\n    }, [])\r\n\r\n    //Listado de categorias via API\r\n    const listarCategorias=async()=>{\r\n        var f = new FormData();\r\n        f.append(\"action\", \"listarCategorias\");\r\n        await axios.post(baseUrl, f)\r\n        .then(response=>{\r\n          setData(response.data.categorias);\r\n        }).catch(error=>{\r\n          console.log(error);\r\n        })\r\n    }\r\n\r\n    //Crear\r\n    const crearCategoria=async()=>{\r\n        var f = new FormData();\r\n        f.append(\"nombre\", categoriaSeleccionada.nombre);\r\n        f.append(\"descripcion\", categoriaSeleccionada.descripcion);\r\n        f.append(\"action\", \"crearCategoria\");\r\n        await axios.post(baseUrl, f)\r\n        .then(response=>{\r\n            console.log(response.data);\r\n            setData(response.data.categorias);\r\n            abrirCerrarModalInsertar();\r\n        }).catch(error=>{\r\n            console.log(error);\r\n        })\r\n      }\r\n      \r\n      //Editar\r\n      const editarCategoria=async()=>{\r\n        var f = new FormData();\r\n        f.append(\"id\", categoriaSeleccionada.id);\r\n        f.append(\"nombre\", categoriaSeleccionada.nombre);\r\n        f.append(\"descripcion\", categoriaSeleccionada.descripcion);\r\n        f.append(\"action\", \"editarCategoria\");\r\n        await axios.post(baseUrl, f)\r\n        .then(response=>{\r\n          var dataNueva= response.data.categorias;\r\n          dataNueva.map(categoria=>{\r\n            if(categoria.id===categoriaSeleccionada.id){\r\n              categoria.nombre=categoriaSeleccionada.nombre;\r\n              categoria.descripcion=categoriaSeleccionada.descripcion;\r\n            }\r\n          });\r\n          setData(dataNueva);\r\n          abrirCerrarModalEditar();\r\n        }).catch(error=>{\r\n          console.log(error);\r\n        })\r\n      }\r\n      \r\n      //Eliminar\r\n      const eliminarCategoria=async()=>{\r\n        var f = new FormData();\r\n        f.append(\"id\", categoriaSeleccionada.id);\r\n        f.append(\"action\", \"eliminarCategoria\");\r\n        await axios.post(baseUrl, f, {params: {id: categoriaSeleccionada.id}})\r\n        .then(response=>{\r\n          setData(response.data.categorias.filter(categoria=>categoria.id!==categoriaSeleccionada.id));\r\n          abrirCerrarModalEliminar();\r\n        }).catch(error=>{\r\n          console.log(error);\r\n        })\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Listado de categorias</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">Nombre</th>\r\n                    <th scope=\"col\">Descripcion</th>\r\n                    <th scope=\"col\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map(categoria=>(\r\n                        <tr key={categoria.id}>\r\n                            <td>{categoria.nombre}</td>\r\n                            <td>{categoria.descripcion}</td>\r\n                            <td>\r\n                                <button className=\"btn btn-primary\" onClick={()=>seleccionarCategoria(categoria, \"Editar\")}>Editar</button> {\"  \"}\r\n                                <button className=\"btn btn-danger\" onClick={()=>seleccionarCategoria(categoria, \"Eliminar\")}>Eliminar</button>\r\n                            </td>\r\n                        </tr>    \r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <button className=\"btn btn-success\" onClick={()=>abrirCerrarModalInsertar()}>Insertar</button>\r\n\r\n            <Modal isOpen={modalInsertar}>\r\n            <ModalHeader>Insertar Categoría</ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"form-group\">\r\n                <label>Nombre: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"nombre\" onChange={handleChange}/>\r\n                <br />\r\n                <label>Descripción: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"descripcion\" onChange={handleChange}/>\r\n                <br />\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <button className=\"btn btn-primary\" onClick={()=>crearCategoria()}>Insertar</button>{\"   \"}\r\n                <button className=\"btn btn-danger\" onClick={()=>abrirCerrarModalInsertar()}>Cancelar</button>\r\n            </ModalFooter>\r\n            </Modal>\r\n\r\n\r\n            \r\n            <Modal isOpen={modalEditar}>\r\n            <ModalHeader>Editar Categoría</ModalHeader>\r\n            <ModalBody>\r\n            <div className=\"form-group\">\r\n                <label>Nombre: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"nombre\" onChange={handleChange} value={categoriaSeleccionada && categoriaSeleccionada.nombre}/>\r\n                <br />\r\n                <label>Descripción: </label>\r\n                <br />\r\n                <input type=\"text\" className=\"form-control\" name=\"descripcion\" onChange={handleChange} value={categoriaSeleccionada && categoriaSeleccionada.descripcion}/>\r\n                <br />\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <button className=\"btn btn-primary\" onClick={()=>editarCategoria()}>Editar</button>{\"   \"}\r\n                <button className=\"btn btn-danger\" onClick={()=>abrirCerrarModalEditar()}>Cancelar</button>\r\n            </ModalFooter>\r\n            </Modal>\r\n\r\n            <Modal isOpen={modalEliminar}>\r\n                <ModalBody>\r\n                ¿Estás seguro que deseas eliminar la categoría {categoriaSeleccionada && categoriaSeleccionada.nombre}?\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                <button className=\"btn btn-danger\" onClick={()=>eliminarCategoria()}>\r\n                    Sí\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={()=>abrirCerrarModalEliminar()}\r\n                >\r\n                    No\r\n                </button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ListaCategorias","C:\\xampp\\htdocs\\frontends\\blogs\\src\\components\\Blog.js",["66","67","68","69","70","71","72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":26,"nodeType":"82","messageId":"83","endLine":1,"endColumn":35},{"ruleId":"80","severity":1,"message":"84","line":3,"column":9,"nodeType":"82","messageId":"83","endLine":3,"endColumn":14},{"ruleId":"80","severity":1,"message":"85","line":3,"column":16,"nodeType":"82","messageId":"83","endLine":3,"endColumn":25},{"ruleId":"80","severity":1,"message":"86","line":3,"column":27,"nodeType":"82","messageId":"83","endLine":3,"endColumn":38},{"ruleId":"80","severity":1,"message":"87","line":3,"column":40,"nodeType":"82","messageId":"83","endLine":3,"endColumn":51},{"ruleId":"80","severity":1,"message":"88","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":13},{"ruleId":"80","severity":1,"message":"89","line":10,"column":3,"nodeType":"82","messageId":"83","endLine":10,"endColumn":7},{"ruleId":"80","severity":1,"message":"90","line":15,"column":8,"nodeType":"82","messageId":"83","endLine":15,"endColumn":12},{"ruleId":"80","severity":1,"message":"91","line":20,"column":9,"nodeType":"82","messageId":"83","endLine":20,"endColumn":16},{"ruleId":"80","severity":1,"message":"92","line":21,"column":10,"nodeType":"82","messageId":"83","endLine":21,"endColumn":14},{"ruleId":"80","severity":1,"message":"93","line":21,"column":16,"nodeType":"82","messageId":"83","endLine":21,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":29,"column":17,"nodeType":"96","messageId":"97","endLine":29,"endColumn":19},{"ruleId":"94","severity":1,"message":"95","line":30,"column":23,"nodeType":"96","messageId":"97","endLine":30,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":33,"column":21,"nodeType":"100","messageId":"101","endLine":33,"endColumn":53,"fix":"102"},{"ruleId":"94","severity":1,"message":"95","line":36,"column":23,"nodeType":"96","messageId":"97","endLine":36,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":39,"column":21,"nodeType":"100","messageId":"101","endLine":39,"endColumn":47,"fix":"103"},{"ruleId":"104","severity":1,"message":"105","line":119,"column":32,"nodeType":"106","messageId":"107","endLine":119,"endColumn":34},{"ruleId":"94","severity":1,"message":"95","line":29,"column":26,"nodeType":"96","messageId":"97","endLine":29,"endColumn":28},{"ruleId":"94","severity":1,"message":"95","line":34,"column":17,"nodeType":"96","messageId":"97","endLine":34,"endColumn":19},{"ruleId":"98","severity":1,"message":"108","line":38,"column":17,"nodeType":"100","messageId":"101","endLine":38,"endColumn":39,"fix":"109"},{"ruleId":"104","severity":1,"message":"105","line":136,"column":29,"nodeType":"106","messageId":"107","endLine":136,"endColumn":31},{"ruleId":"104","severity":1,"message":"105","line":90,"column":34,"nodeType":"106","messageId":"107","endLine":90,"endColumn":36},{"ruleId":"80","severity":1,"message":"110","line":2,"column":16,"nodeType":"82","messageId":"83","endLine":2,"endColumn":24},{"ruleId":"80","severity":1,"message":"84","line":3,"column":9,"nodeType":"82","messageId":"83","endLine":3,"endColumn":14},{"ruleId":"80","severity":1,"message":"85","line":3,"column":16,"nodeType":"82","messageId":"83","endLine":3,"endColumn":25},{"ruleId":"80","severity":1,"message":"86","line":3,"column":27,"nodeType":"82","messageId":"83","endLine":3,"endColumn":38},{"ruleId":"80","severity":1,"message":"87","line":3,"column":40,"nodeType":"82","messageId":"83","endLine":3,"endColumn":51},{"ruleId":"80","severity":1,"message":"111","line":12,"column":12,"nodeType":"82","messageId":"83","endLine":12,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":19,"column":8,"nodeType":"114","endLine":19,"endColumn":10,"suggestions":"115"},{"ruleId":"94","severity":1,"message":"95","line":35,"column":34,"nodeType":"96","messageId":"97","endLine":35,"endColumn":36},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],["116"],["117"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'ModalHeader' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'Home' is defined but never used.","'baseUrl' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-computed-key","Unnecessarily computed property ['tipousuario'] found.","Property","unnecessarilyComputedProperty",{"range":"118","text":"119"},{"range":"120","text":"119"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Unnecessarily computed property ['categorias'] found.",{"range":"121","text":"122"},"'useState' is defined but never used.","'categorias' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verBlog'. Either include it or remove the dependency array.","ArrayExpression",["123"],"no-global-assign","no-unsafe-negation",[1112,1127],"'tipousuario'",[1323,1338],[1235,1249],"'categorias'",{"desc":"124","fix":"125"},"Update the dependencies array to be: [verBlog]",{"range":"126","text":"127"},[664,666],"[verBlog]"]